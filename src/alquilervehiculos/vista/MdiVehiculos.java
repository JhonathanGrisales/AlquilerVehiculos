/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alquilervehiculos.vista;

import alquilervehiculos.controlador.GestionUsuario;
import alquilervehiculos.controlador.GestionVehiculo;
import alquilervehiculos.modelo.AbstractVehiculo;
import alquilervehiculos.modelo.Coche;
import alquilervehiculos.modelo.Furgoneta;
import alquilervehiculos.modelo.Moto;
import alquilervehiculos.modelo.TipoUsuario;
import alquilervehiculos.modelo.Usuario;

import alquilervehiculos.utilidades.EscribirArchivoPlano;
import alquilervehiculos.utilidades.LeerCsv;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import java.beans.PropertyVetoException;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jhonathan_G
 */
public class MdiVehiculos extends javax.swing.JFrame {

    private GestionUsuario gestionUsuario;
    private Usuario usuarioAutenticado;
    private GestionVehiculo gestionVehiculo;
    private boolean extras;
    private boolean estado;
    private boolean casco;
    private boolean estadoMoto;
    private boolean furgoneta;
    private int tipoUsuario;
    TableRowSorter trs;

    /**
     * Creates new form MdiVehiculos
     */
    public MdiVehiculos() {
        initComponents();

    }

    private void iniciarMenus(boolean estado) {

        mnuCrearUsuario.setVisible(estado);
        mnuVehiculos.setVisible(estado);
        mnuListarCoches.setVisible(estado);
        mnuListarMotos.setVisible(estado);
        mnuListarfurgonetas.setVisible(estado);
        mnuInformeVehiculos.setVisible(estado);

    }

    private void gestionPersmisosMenus() {

        iniciarMenus(false);
        switch (usuarioAutenticado.getTipoUsuario().getCodigo()) {
            //Administrador
            case "1":
                iniciarMenus(true);
                mnuVehiculos.setVisible(true);
                mnuListarCoches.setVisible(true);
                mnuListarMotos.setVisible(true);
                mnuListarfurgonetas.setVisible(true);
                mnuCrearUsuario.setVisible(true);
                mnuInformeVehiculos.setVisible(true);

                break;
            //Consulta
            case "2":
                iniciarMenus(false);
                mnuVehiculos.setVisible(true);
                mnuListarCoches.setVisible(true);
                mnuListarMotos.setVisible(true);

                break;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExtras = new javax.swing.ButtonGroup();
        btnEstado = new javax.swing.ButtonGroup();
        btnCasco = new javax.swing.ButtonGroup();
        btnEstadoMoto = new javax.swing.ButtonGroup();
        btnEstadoFurgoneta = new javax.swing.ButtonGroup();
        desktopPane = new javax.swing.JDesktopPane();
        jifLogin = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtUsuario = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jifCoches = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCoches = new javax.swing.JTable();
        lblMatricula = new javax.swing.JLabel();
        lblValorAlquiler = new javax.swing.JLabel();
        lblKmCarro = new javax.swing.JLabel();
        lblExtrasCarro = new javax.swing.JLabel();
        lblEstadoCarro = new javax.swing.JLabel();
        txtMatriculaCarro = new javax.swing.JTextField();
        txtValorAlquilerCarro = new javax.swing.JTextField();
        txtKmCarro = new javax.swing.JTextField();
        btnGuardarCoche = new javax.swing.JButton();
        btnSi = new javax.swing.JRadioButton();
        btnNo = new javax.swing.JRadioButton();
        btnDisponible = new javax.swing.JRadioButton();
        btnNoDisponible = new javax.swing.JRadioButton();
        btnModificarCoche = new javax.swing.JButton();
        btnElimicarCoche = new javax.swing.JButton();
        jifMotos = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMotos = new javax.swing.JTable();
        txtMatriculaMoto = new javax.swing.JTextField();
        txtValorAlquilerMoto = new javax.swing.JTextField();
        btnSiCasco = new javax.swing.JRadioButton();
        txtKmMoto = new javax.swing.JTextField();
        btnNoCasco = new javax.swing.JRadioButton();
        btnGuardarMoto = new javax.swing.JButton();
        lblMatricula1 = new javax.swing.JLabel();
        btnMotoNoDisponible = new javax.swing.JRadioButton();
        btnMotoDisponible = new javax.swing.JRadioButton();
        lblValorAlquiler1 = new javax.swing.JLabel();
        lblKmCarro1 = new javax.swing.JLabel();
        lblExtrasCarro1 = new javax.swing.JLabel();
        lblEstadoCarro1 = new javax.swing.JLabel();
        btnEliminarMoto = new javax.swing.JButton();
        btnModificarMotos = new javax.swing.JButton();
        jifCrearUsuario = new javax.swing.JInternalFrame();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtClaveCrearUsuario = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();
        txtConfirmarClave = new javax.swing.JPasswordField();
        cboTipoUsuario = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnCrearUsuario = new javax.swing.JToggleButton();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnModificarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        jifFurgonetas = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFurgonetas = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtCapacidad = new javax.swing.JTextField();
        txtMatriculaFurgon = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtKmFurgoneta = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtValorAlquilerFurgoneta = new javax.swing.JTextField();
        btnFurgonDisponible = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        btnAgregarFurgonta = new javax.swing.JButton();
        btnFurgonNoDisponible = new javax.swing.JRadioButton();
        btnEliminarFurgon = new javax.swing.JToggleButton();
        btnModificarFuron = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jifInformeVehiculos = new javax.swing.JInternalFrame();
        pnlPestañas = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblVehiculosDisponibles = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblVehiculosNoDisponibles = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblTodosLosVehiculos = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        mnuMenuAlquiler = new javax.swing.JMenu();
        mnuVehiculos = new javax.swing.JMenu();
        mnuListarVehiculos = new javax.swing.JMenu();
        mnuListarCoches = new javax.swing.JMenuItem();
        mnuListarMotos = new javax.swing.JMenuItem();
        mnuListarfurgonetas = new javax.swing.JMenuItem();
        mnuCrearUsuario = new javax.swing.JMenuItem();
        mnuInformeVehiculos = new javax.swing.JMenuItem();
        mnuCerrarSesion = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktopPane.setBackground(new java.awt.Color(153, 153, 153));

        jifLogin.setTitle("Iniciar Sesión");
        jifLogin.setToolTipText("");
        jifLogin.setVisible(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Usuario* :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Contraseña* :");

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        btnIngresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIngresar.setText("INGRESAR");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jhonathan_G\\Desktop\\Programación 1\\Proyecto final\\icono-iniciar-sesion-png.png")); // NOI18N
        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout jifLoginLayout = new javax.swing.GroupLayout(jifLogin.getContentPane());
        jifLogin.getContentPane().setLayout(jifLoginLayout);
        jifLoginLayout.setHorizontalGroup(
            jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifLoginLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jifLoginLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnIngresar)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jifLoginLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jifLoginLayout.setVerticalGroup(
            jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifLoginLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(jifLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addComponent(btnIngresar)
                .addGap(74, 74, 74))
        );

        desktopPane.add(jifLogin);
        jifLogin.setBounds(190, 80, 460, 310);

        jifCoches.setClosable(true);
        jifCoches.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jifCoches.setIconifiable(true);
        jifCoches.setMaximizable(true);
        jifCoches.setResizable(true);
        jifCoches.setTitle("Listado de Coches");
        jifCoches.setVisible(false);

        tblCoches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Extras", "Matricula", "Km", "Estado", "Valor Alquiler"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCoches);

        lblMatricula.setText("Matricula* :");

        lblValorAlquiler.setText("Valor Alquiler* : ");

        lblKmCarro.setText("Km* : ");

        lblExtrasCarro.setText("Extras * : ");

        lblEstadoCarro.setText("Estado * : ");

        txtMatriculaCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaCarroActionPerformed(evt);
            }
        });

        btnGuardarCoche.setText("Agregar Coche");
        btnGuardarCoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCocheActionPerformed(evt);
            }
        });

        btnExtras.add(btnSi);
        btnSi.setText("Si");

        btnExtras.add(btnNo);
        btnNo.setText("No");

        btnEstado.add(btnDisponible);
        btnDisponible.setText("Disponible ");

        btnEstado.add(btnNoDisponible);
        btnNoDisponible.setText("No Disponible");
        btnNoDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoDisponibleActionPerformed(evt);
            }
        });

        btnModificarCoche.setText("Modificar");
        btnModificarCoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCocheActionPerformed(evt);
            }
        });

        btnElimicarCoche.setText("Eliminar");
        btnElimicarCoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimicarCocheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jifCochesLayout = new javax.swing.GroupLayout(jifCoches.getContentPane());
        jifCoches.getContentPane().setLayout(jifCochesLayout);
        jifCochesLayout.setHorizontalGroup(
            jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifCochesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifCochesLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jifCochesLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKmCarro, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblExtrasCarro, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEstadoCarro, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMatricula, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jifCochesLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtValorAlquilerCarro, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMatriculaCarro, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKmCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnNo)
                                    .addComponent(btnSi)
                                    .addComponent(btnDisponible)
                                    .addComponent(btnNoDisponible)))
                            .addComponent(lblValorAlquiler)))
                    .addGroup(jifCochesLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnGuardarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jifCochesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnElimicarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jifCochesLayout.setVerticalGroup(
            jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifCochesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifCochesLayout.createSequentialGroup()
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatricula)
                            .addComponent(txtMatriculaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValorAlquiler)
                            .addComponent(txtValorAlquilerCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKmCarro)
                            .addComponent(txtKmCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExtrasCarro)
                            .addComponent(btnSi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNo)
                        .addGap(10, 10, 10)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEstadoCarro)
                            .addComponent(btnDisponible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNoDisponible)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGuardarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jifCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnElimicarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        desktopPane.add(jifCoches);
        jifCoches.setBounds(30, 30, 746, 400);

        jifMotos.setClosable(true);
        jifMotos.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jifMotos.setIconifiable(true);
        jifMotos.setMaximizable(true);
        jifMotos.setResizable(true);
        jifMotos.setTitle("Lista de Motos");
        jifMotos.setVisible(false);

        tblMotos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Casco", "Matricula", "Km", "Estado", "Valor Alquiler"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMotos);

        btnCasco.add(btnSiCasco);
        btnSiCasco.setText("Si");

        btnCasco.add(btnNoCasco);
        btnNoCasco.setText("No");

        btnGuardarMoto.setText("Agregar Moto");
        btnGuardarMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarMotoActionPerformed(evt);
            }
        });

        lblMatricula1.setText("Matricula* :");

        btnEstadoMoto.add(btnMotoNoDisponible);
        btnMotoNoDisponible.setText("No Disponible");

        btnEstadoMoto.add(btnMotoDisponible);
        btnMotoDisponible.setText("Disponible ");

        lblValorAlquiler1.setText("Valor Alquiler* : ");

        lblKmCarro1.setText("Km* : ");

        lblExtrasCarro1.setText("Casco * : ");

        lblEstadoCarro1.setText("Estado * : ");

        btnEliminarMoto.setText("Eliminar");
        btnEliminarMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMotoActionPerformed(evt);
            }
        });

        btnModificarMotos.setText("Modificar");
        btnModificarMotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarMotosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jifMotosLayout = new javax.swing.GroupLayout(jifMotos.getContentPane());
        jifMotos.getContentPane().setLayout(jifMotosLayout);
        jifMotosLayout.setHorizontalGroup(
            jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifMotosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifMotosLayout.createSequentialGroup()
                        .addComponent(btnEliminarMoto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificarMotos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblValorAlquiler1)
                    .addGroup(jifMotosLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGuardarMoto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jifMotosLayout.createSequentialGroup()
                                .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKmCarro1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblExtrasCarro1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEstadoCarro1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMatricula1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jifMotosLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtValorAlquilerMoto, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMatriculaMoto, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKmMoto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnNoCasco)
                                    .addComponent(btnSiCasco)
                                    .addComponent(btnMotoDisponible)
                                    .addComponent(btnMotoNoDisponible)))))))
        );
        jifMotosLayout.setVerticalGroup(
            jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifMotosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifMotosLayout.createSequentialGroup()
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatricula1)
                            .addComponent(txtMatriculaMoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblValorAlquiler1)
                            .addComponent(txtValorAlquilerMoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKmCarro1)
                            .addComponent(txtKmMoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExtrasCarro1)
                            .addComponent(btnSiCasco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNoCasco)
                        .addGap(10, 10, 10)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEstadoCarro1)
                            .addComponent(btnMotoDisponible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMotoNoDisponible)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardarMoto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifMotosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarMoto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificarMotos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        desktopPane.add(jifMotos);
        jifMotos.setBounds(20, 30, 766, 390);

        jifCrearUsuario.setClosable(true);
        jifCrearUsuario.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jifCrearUsuario.setIconifiable(true);
        jifCrearUsuario.setMaximizable(true);
        jifCrearUsuario.setResizable(true);
        jifCrearUsuario.setTitle("Crear Usuario");
        jifCrearUsuario.setVisible(false);

        jLabel5.setText("Correo* :");

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jhonathan_G\\Desktop\\Programación 1\\Proyecto final\\Crear.png")); // NOI18N

        jLabel6.setText("Clave* :");

        jLabel7.setText("Tipo Usuario* :");

        jLabel17.setText("Confirmar clave*:");

        cboTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Consulta" }));

        jLabel3.setText("Cedula* :");

        btnCrearUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCrearUsuario.setText("Crear Usuario");
        btnCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearUsuarioActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre* :");

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Correo", "Clave", "Tipo Usuarios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblUsuarios);

        btnModificarUsuario.setText("Modificar");
        btnModificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jifCrearUsuarioLayout = new javax.swing.GroupLayout(jifCrearUsuario.getContentPane());
        jifCrearUsuario.getContentPane().setLayout(jifCrearUsuarioLayout);
        jifCrearUsuarioLayout.setHorizontalGroup(
            jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                                .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel7))
                                .addGap(27, 27, 27)
                                .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtClaveCrearUsuario)
                                    .addComponent(txtCorreo)
                                    .addComponent(txtNombre)
                                    .addComponent(txtCedula)
                                    .addComponent(txtConfirmarClave)
                                    .addComponent(cboTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnCrearUsuario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jifCrearUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnModificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jifCrearUsuarioLayout.setVerticalGroup(
            jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtClaveCrearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtConfirmarClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cboTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCrearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jifCrearUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        desktopPane.add(jifCrearUsuario);
        jifCrearUsuario.setBounds(50, 10, 731, 439);

        jifFurgonetas.setClosable(true);
        jifFurgonetas.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jifFurgonetas.setIconifiable(true);
        jifFurgonetas.setMaximizable(true);
        jifFurgonetas.setTitle("Lista de Furgonetas");
        jifFurgonetas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jifFurgonetas.setVisible(false);

        tblFurgonetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Capacidad", "Matricula", "Km", "Estado", "Valor Alquiler"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblFurgonetas);

        jLabel11.setText("Capacidad (Tm)* :");

        jLabel12.setText("Matricula* :");

        jLabel13.setText("Km* :");

        jLabel14.setText("Valor Alquiler* :");

        btnEstadoFurgoneta.add(btnFurgonDisponible);
        btnFurgonDisponible.setText("Disponble");
        btnFurgonDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFurgonDisponibleActionPerformed(evt);
            }
        });

        jLabel15.setText("Estado* :");

        btnAgregarFurgonta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAgregarFurgonta.setText("Agregar Furgon");
        btnAgregarFurgonta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFurgontaActionPerformed(evt);
            }
        });

        btnEstadoFurgoneta.add(btnFurgonNoDisponible);
        btnFurgonNoDisponible.setText("No Disponble");
        btnFurgonNoDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFurgonNoDisponibleActionPerformed(evt);
            }
        });

        btnEliminarFurgon.setText("Eliminar");
        btnEliminarFurgon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFurgonActionPerformed(evt);
            }
        });

        btnModificarFuron.setText("Modificar");
        btnModificarFuron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarFuronActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jifFurgonetasLayout = new javax.swing.GroupLayout(jifFurgonetas.getContentPane());
        jifFurgonetas.getContentPane().setLayout(jifFurgonetasLayout);
        jifFurgonetasLayout.setHorizontalGroup(
            jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifFurgonetasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifFurgonetasLayout.createSequentialGroup()
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jifFurgonetasLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)))
                            .addGroup(jifFurgonetasLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))))
                        .addGap(18, 18, 18)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFurgonNoDisponible)
                            .addComponent(btnFurgonDisponible)
                            .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jifFurgonetasLayout.createSequentialGroup()
                                    .addComponent(txtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtKmFurgoneta, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtMatriculaFurgon, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtValorAlquilerFurgoneta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jifFurgonetasLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnAgregarFurgonta))
                    .addGroup(jifFurgonetasLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnEliminarFurgon, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificarFuron, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jifFurgonetasLayout.setVerticalGroup(
            jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifFurgonetasLayout.createSequentialGroup()
                .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifFurgonetasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jifFurgonetasLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtMatriculaFurgon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKmFurgoneta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtValorAlquilerFurgoneta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFurgonDisponible)
                            .addComponent(jLabel15))
                        .addGap(3, 3, 3)
                        .addComponent(btnFurgonNoDisponible)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregarFurgonta, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jifFurgonetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarFurgon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificarFuron, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        desktopPane.add(jifFurgonetas);
        jifFurgonetas.setBounds(30, 30, 691, 411);

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jhonathan_G\\Desktop\\Programación 1\\Proyecto final\\9914-azul-liso.jpg")); // NOI18N
        desktopPane.add(jLabel8);
        jLabel8.setBounds(0, 0, 970, 470);

        jifInformeVehiculos.setClosable(true);
        jifInformeVehiculos.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jifInformeVehiculos.setIconifiable(true);
        jifInformeVehiculos.setMaximizable(true);
        jifInformeVehiculos.setTitle("Informe Vehiculos");
        jifInformeVehiculos.setToolTipText("");
        jifInformeVehiculos.setVisible(false);

        tblVehiculosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Km", "Valor Alquiler", "Tipo Vehiculo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblVehiculosDisponibles);

        pnlPestañas.addTab("Vehiculos Disponibles", jScrollPane4);

        tblVehiculosNoDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Km", "Valor Alquiler", "Tipo Vehiculo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblVehiculosNoDisponibles);

        pnlPestañas.addTab("Vehiculos Alquilados", jScrollPane5);

        tblTodosLosVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Km", "Valor alquiler", "Tipo Vehiculo", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblTodosLosVehiculos);

        pnlPestañas.addTab("Todos los Vehiculos", jScrollPane6);

        jLabel16.setText("Buscar Vehiculio:");

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jifInformeVehiculosLayout = new javax.swing.GroupLayout(jifInformeVehiculos.getContentPane());
        jifInformeVehiculos.getContentPane().setLayout(jifInformeVehiculosLayout);
        jifInformeVehiculosLayout.setHorizontalGroup(
            jifInformeVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifInformeVehiculosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPestañas, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jifInformeVehiculosLayout.setVerticalGroup(
            jifInformeVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jifInformeVehiculosLayout.createSequentialGroup()
                .addGroup(jifInformeVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jifInformeVehiculosLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jifInformeVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jifInformeVehiculosLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(pnlPestañas, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        desktopPane.add(jifInformeVehiculos);
        jifInformeVehiculos.setBounds(0, 0, 709, 460);

        mnuMenuAlquiler.setMnemonic('f');
        mnuMenuAlquiler.setText("Archivo");
        mnuMenuAlquiler.setEnabled(false);

        mnuVehiculos.setText("Vehiculos");

        mnuListarVehiculos.setText("Listar Vehiculos");

        mnuListarCoches.setText("Listar Coches");
        mnuListarCoches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListarCochesActionPerformed(evt);
            }
        });
        mnuListarVehiculos.add(mnuListarCoches);

        mnuListarMotos.setText("Listar Motos");
        mnuListarMotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListarMotosActionPerformed(evt);
            }
        });
        mnuListarVehiculos.add(mnuListarMotos);

        mnuListarfurgonetas.setText("Listar Furgonetas");
        mnuListarfurgonetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListarfurgonetasActionPerformed(evt);
            }
        });
        mnuListarVehiculos.add(mnuListarfurgonetas);

        mnuVehiculos.add(mnuListarVehiculos);

        mnuMenuAlquiler.add(mnuVehiculos);

        mnuCrearUsuario.setText("Crear Usuario");
        mnuCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCrearUsuarioActionPerformed(evt);
            }
        });
        mnuMenuAlquiler.add(mnuCrearUsuario);

        mnuInformeVehiculos.setText("Informe Vehiculos");
        mnuInformeVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuInformeVehiculosActionPerformed(evt);
            }
        });
        mnuMenuAlquiler.add(mnuInformeVehiculos);

        mnuCerrarSesion.setMnemonic('a');
        mnuCerrarSesion.setText("Cerrar Sesión");
        mnuCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCerrarSesionActionPerformed(evt);
            }
        });
        mnuMenuAlquiler.add(mnuCerrarSesion);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        mnuMenuAlquiler.add(exitMenuItem);

        menuBar.add(mnuMenuAlquiler);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed

        if (txtUsuario.getText() == null || txtUsuario.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el usuario ", "Datos Faltantes", 2);
        } else if (txtPassword.getPassword().length == 0) {
            JOptionPane.showMessageDialog(this, "Debe diligenciar la contraseña", "Datos Faltantes", 2);
        } else {
            gestionUsuario = new GestionUsuario();
            //El correo y passwd que se ingreso esta bueno 
            Pattern pattern = Pattern.compile("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$");
            Matcher matcher = pattern.matcher(txtUsuario.getText());

            if (matcher.find() == true) {

                usuarioAutenticado = gestionUsuario.
                        validarUsuario(txtUsuario.getText(), txtPassword.getText());
                if (usuarioAutenticado == null) {
                    JOptionPane.showMessageDialog(this, "El usuario encontrado no existe", "Datos Erroneos", 0);
                } else {
                    gestionVehiculo = new GestionVehiculo();

                    JOptionPane.showMessageDialog(this, "Bienvenido " + usuarioAutenticado, "Bienvenido ", 1);
                    mnuMenuAlquiler.setEnabled(true);
                    gestionPersmisosMenus();
                    jifLogin.hide();

                }

            } else {
                JOptionPane.showMessageDialog(this, "El correo no tiene el formato valido", "Datos erroneos", 0);
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void mnuCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCerrarSesionActionPerformed

        mnuMenuAlquiler.setEnabled(false);
        txtUsuario.setText("");
        txtPassword.setText("");
        usuarioAutenticado = null;
        iniciarMenus(false);
        jifLogin.show();
        jifCoches.setVisible(false);
        jifMotos.setVisible(false);
        jifFurgonetas.setVisible(false);
        jifCrearUsuario.setVisible(false);
        jifInformeVehiculos.setVisible(false);


    }//GEN-LAST:event_mnuCerrarSesionActionPerformed

    private void pintarUsuario() {

        DefaultTableModel modeloUsuarios = (DefaultTableModel) tblUsuarios.getModel();
        modeloUsuarios.getDataVector().removeAllElements();

        for (Usuario usuario : gestionUsuario.getUsuarios()) {

            modeloUsuarios.addRow(usuario.obtenerArregloObjeto());
            tblUsuarios.getColumnModel().getColumn(4).setMaxWidth(0);
            tblUsuarios.getColumnModel().getColumn(4).setMinWidth(0);
            tblUsuarios.getColumnModel().getColumn(4).setPreferredWidth(0);
            
            tblUsuarios.getColumnModel().getColumn(3).setMaxWidth(0);
            tblUsuarios.getColumnModel().getColumn(3).setMinWidth(0);
            tblUsuarios.getColumnModel().getColumn(3).setPreferredWidth(0);
            

        }
        tblUsuarios.setModel(modeloUsuarios);

    }

    private void pintarVehiculosDisponibles() {

        DefaultTableModel modeloDisponibles = (DefaultTableModel) tblVehiculosDisponibles.getModel();
        modeloDisponibles.getDataVector().removeAllElements();

        for (AbstractVehiculo vehiculo : gestionVehiculo.obtenerVehiculos("Vehiculos")) {

            if (vehiculo.estado == true) {

                modeloDisponibles.addRow(vehiculo.obtenerArregloObjetoDos());
            }
            tblVehiculosDisponibles.setModel(modeloDisponibles);
        }
    }

    private void pintarVehiculosNoDisponibles() {

        DefaultTableModel modeloNoDisponibles = (DefaultTableModel) tblVehiculosNoDisponibles.getModel();
        modeloNoDisponibles.getDataVector().removeAllElements();

        for (AbstractVehiculo vehiculo : gestionVehiculo.obtenerVehiculos("Vehiculos")) {

            if (vehiculo.estado == false) {

                modeloNoDisponibles.addRow(vehiculo.obtenerArregloObjetoDos());
            }
            tblVehiculosNoDisponibles.setModel(modeloNoDisponibles);
        }
    }

    private void pintarTodosLosVehiculos() {

        DefaultTableModel modeloNoDisponibles = (DefaultTableModel) tblTodosLosVehiculos.getModel();
        modeloNoDisponibles.getDataVector().removeAllElements();

        for (AbstractVehiculo vehiculo : gestionVehiculo.obtenerVehiculos("Vehiculos")) {

            modeloNoDisponibles.addRow(vehiculo.obtenerArregloObjetoDos());

            tblTodosLosVehiculos.setModel(modeloNoDisponibles);
        }
    }

    private void pintarCoches() {

        DefaultTableModel model = (DefaultTableModel) tblCoches.getModel();
        model.getDataVector().removeAllElements();

        for (AbstractVehiculo coche : gestionVehiculo.obtenerVehiculos("Coche")) {

            model.addRow(coche.obtenerArregloObjeto());
        }
        tblCoches.setModel(model);
    }

    private void pintarMotos() {

        DefaultTableModel model = (DefaultTableModel) tblMotos.getModel();
        model.getDataVector().removeAllElements();

        for (AbstractVehiculo moto : gestionVehiculo.obtenerVehiculos("Moto")) {

            model.addRow(moto.obtenerArregloObjeto());
        }
        tblMotos.setModel(model);
    }

    private void pintarFurgonetas() {

        DefaultTableModel modelFurgoneta = (DefaultTableModel) tblFurgonetas.getModel();
        modelFurgoneta.getDataVector().removeAllElements();

        for (AbstractVehiculo furgon : gestionVehiculo.obtenerVehiculos("Furgoneta")) {

            modelFurgoneta.addRow(furgon.obtenerArregloObjeto());
        }
        tblFurgonetas.setModel(modelFurgoneta);
    }

    private void mnuListarCochesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListarCochesActionPerformed

//LLENAR VEHICULOS
        gestionVehiculo.llenarVehiculos();
        //LLENAR TABLA CARROS
        pintarCoches();
        jifCoches.repaint();
        jifCoches.show();
        //Maximizar el listado   
        if (jifCoches.isIcon()) {

            try {
                jifCoches.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_mnuListarCochesActionPerformed

    private void mnuListarMotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListarMotosActionPerformed

//LLENAR VEHICULOS
        gestionVehiculo.llenarVehiculos();
        //LLENAR TABLA MOTOS
        pintarMotos();
        jifMotos.repaint();
        jifMotos.show();
        //Maximizar el listado s  
        if (jifMotos.isIcon()) {

            try {
                jifMotos.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_mnuListarMotosActionPerformed

    private void btnGuardarCocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCocheActionPerformed

        if (btnSi.isSelected()) {
            extras = true;
        } else if (btnNo.isSelected()) {
            extras = false;
        }

        if (btnDisponible.isSelected()) {
            estado = true;
        } else if (btnNoDisponible.isSelected()) {
            estado = false;
        }

        if (txtMatriculaCarro.getText() == null || txtMatriculaCarro.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar la matricula del carro ", "Datos Faltantes", 2);
        } else if (txtKmCarro.getText() == null || txtKmCarro.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe diligenciar  los Kms del carro ", "Datos Faltantes", 2);
        } else if (txtValorAlquilerCarro.getText() == null || txtValorAlquilerCarro.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe diligenciar el valor del alquiler", "Datos Faltantes", 2);

        } else if (btnExtras.getSelection() == null || btnEstado.getSelection() == null) {

            JOptionPane.showMessageDialog(this, "Debe marcar las casillas de estado y extras ", "Datos Faltantes", 2);
        } else {

            AbstractVehiculo vehiculo = new Coche(extras, txtMatriculaCarro.getText().toUpperCase(), Integer.parseInt(txtKmCarro.getText()),
                    estado, Double.parseDouble(txtValorAlquilerCarro.getText()));

            gestionVehiculo.adicionarCoches(vehiculo);
            pintarCoches();

            //LIMPIAR PANTALLA DESPUES DE AGREGAR MOTO
            txtMatriculaCarro.setText("");
            txtKmCarro.setText("");
            txtValorAlquilerCarro.setText("");
            btnExtras.clearSelection();
            btnEstado.clearSelection();
        }


    }//GEN-LAST:event_btnGuardarCocheActionPerformed

    private void btnGuardarMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarMotoActionPerformed

        if (btnSiCasco.isSelected()) {
            casco = true;
        } else if (btnNoCasco.isSelected()) {
            casco = false;
        }

        if (btnMotoDisponible.isSelected()) {
            estadoMoto = true;
        } else if (btnMotoNoDisponible.isSelected()) {
            estadoMoto = false;

        }

        if (txtMatriculaMoto.getText() == null || txtMatriculaMoto.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar la matricula de la moto ", "Datos Faltantes", 2);

        } else if (txtKmMoto.getText() == null || txtKmMoto.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe diligenciar  los Kms de la Moto ", "Datos Faltantes", 2);
        } else if (txtValorAlquilerMoto.getText() == null || txtValorAlquilerMoto.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe diligenciar el valor del alquiler ", "Datos Faltantes", 2);

        } else if (btnEstadoMoto.getSelection() == null || btnCasco.getSelection() == null) {

            JOptionPane.showMessageDialog(this, "Debe marcar la casilla de estado y casco ", "Datos Faltantes", 2);
        } else {
            AbstractVehiculo moto = new Moto(casco, txtMatriculaMoto.getText().toUpperCase(), Integer.parseInt(txtKmMoto.getText()),
                    estadoMoto, Double.parseDouble(txtValorAlquilerMoto.getText()));

            gestionVehiculo.adicionarMotos(moto);
            pintarMotos();
            //LIMPIAR PANTALLA DESPUES DE AGREGAR MOTO

            txtMatriculaMoto.setText("");
            txtKmMoto.setText("");
            txtValorAlquilerMoto.setText("");
            btnEstadoMoto.clearSelection();
            btnCasco.clearSelection();

        }
    }//GEN-LAST:event_btnGuardarMotoActionPerformed

    private void btnNoDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNoDisponibleActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void mnuCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCrearUsuarioActionPerformed

        pintarUsuario();
        jifCrearUsuario.repaint();
        jifCrearUsuario.show();

        //Maximizar el listado de materias  
        if (jifCrearUsuario.isIcon()) {

            try {
                jifCrearUsuario.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_mnuCrearUsuarioActionPerformed

    private void mnuListarfurgonetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListarfurgonetasActionPerformed

        gestionVehiculo.llenarVehiculos();
        //LLENAR TABLA FURGONETAS
        pintarFurgonetas();
        jifFurgonetas.repaint();
        jifFurgonetas.show();
        //Maximizar el listado  
        if (jifFurgonetas.isIcon()) {

            try {
                jifFurgonetas.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_mnuListarfurgonetasActionPerformed

    private void btnFurgonDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFurgonDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFurgonDisponibleActionPerformed

    private void btnAgregarFurgontaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFurgontaActionPerformed

        if (btnFurgonDisponible.isSelected()) {

            furgoneta = true;

        } else if (btnFurgonNoDisponible.isSelected()) {

            furgoneta = false;
        }

        if (txtCapacidad.getText() == null || txtCapacidad.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar la capacidad de la furgoneta ", "Datos Faltantes", 2);

        } else if (txtMatriculaFurgon.getText() == null || txtMatriculaFurgon.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar la matricula de la furgoneta ", "Datos Faltantes", 2);
        } else if (txtKmFurgoneta.getText() == null || txtKmFurgoneta.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar los Km de la furgoneta ", "Datos Faltantes", 2);

        } else if (txtValorAlquilerFurgoneta.getText() == null || txtValorAlquilerFurgoneta.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el valor  alquiler de la furgoneta ", "Datos Faltantes", 2);
        } else if (btnEstadoFurgoneta.getSelection() == null) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el estado de la furgoneta ", "Datos Faltantes", 2);
        } else {

            AbstractVehiculo furgon = new Furgoneta(Short.parseShort(txtCapacidad.getText()), txtMatriculaFurgon.getText().toUpperCase(), Integer.parseInt(txtKmFurgoneta.getText()), furgoneta,
                    Double.parseDouble(txtValorAlquilerFurgoneta.getText()));

            gestionVehiculo.adicionarFurgon(furgon);
            pintarFurgonetas();

            txtMatriculaFurgon.setText("");
            txtKmFurgoneta.setText("");
            txtValorAlquilerFurgoneta.setText("");
            txtCapacidad.setText("");
            btnEstado.clearSelection();

        }


    }//GEN-LAST:event_btnAgregarFurgontaActionPerformed

    private void btnFurgonNoDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFurgonNoDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFurgonNoDisponibleActionPerformed

    private void btnModificarCocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCocheActionPerformed

        DefaultTableModel modeloCoche = (DefaultTableModel) tblCoches.getModel();
        int filaSleccionada = tblCoches.getSelectedRow();
        if (filaSleccionada >= 0) {

            txtMatriculaCarro.setText(tblCoches.getValueAt(filaSleccionada, 1).toString());
            txtValorAlquilerCarro.setText(tblCoches.getValueAt(filaSleccionada, 4).toString());
            txtKmCarro.setText(tblCoches.getValueAt(filaSleccionada, 2).toString());

            modeloCoche.removeRow(filaSleccionada);

            try {
                SobreescribirListaCoches();
                gestionVehiculo.llenarVehiculos();
                pintarCoches();

            } catch (IOException ex) {
                System.out.println("ERROR: Ocurrio un problema al modificar el archivo!" + ex.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(this, "No se seleciono nigun elemento");
        }

    }//GEN-LAST:event_btnModificarCocheActionPerformed

    private void btnElimicarCocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimicarCocheActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblCoches.getModel();

        int fila = tblCoches.getSelectedRow();
        if (fila >= 0) {

            model.removeRow(fila);

            JOptionPane.showMessageDialog(this, "Registro eliminado");

        } else {
            JOptionPane.showMessageDialog(this, "No se seleciono nigun elemento");
        }

        try {
            SobreescribirListaCoches();
            gestionVehiculo.llenarVehiculos();
            pintarCoches();

//           
        } catch (IOException ex) {
            System.out.println("ERROR: Ocurrio un problema al eliminar el archivo!" + ex.getMessage());
        }


    }//GEN-LAST:event_btnElimicarCocheActionPerformed

    private void txtMatriculaCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaCarroActionPerformed

    private void btnEliminarMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMotoActionPerformed
        // ELIMINAR MOTO

        DefaultTableModel modelMoto = (DefaultTableModel) tblMotos.getModel();

        int fila = tblMotos.getSelectedRow();
        if (fila >= 0) {

            modelMoto.removeRow(fila);

            JOptionPane.showMessageDialog(this, "Registro eliminado");

        } else {
            JOptionPane.showMessageDialog(this, "No se seleciono nigun elemento");
        }

        try {
            SobreescribirListaMotos();
            gestionVehiculo.llenarVehiculos();
            pintarMotos();

//           
        } catch (IOException ex) {
            System.out.println("ERROR: Ocurrio un problema al eliminar el archivo!" + ex.getMessage());
        }


    }//GEN-LAST:event_btnEliminarMotoActionPerformed

    private void btnModificarMotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarMotosActionPerformed
        // MODIFICAR MOTO

        DefaultTableModel modeloMoto = (DefaultTableModel) tblMotos.getModel();
        int filaSleccionada = tblMotos.getSelectedRow();
        if (filaSleccionada >= 0) {

            txtMatriculaMoto.setText(tblMotos.getValueAt(filaSleccionada, 1).toString());
            txtValorAlquilerMoto.setText(tblMotos.getValueAt(filaSleccionada, 4).toString());
            txtKmCarro.setText(tblMotos.getValueAt(filaSleccionada, 2).toString());

            modeloMoto.removeRow(filaSleccionada);

            try {
                SobreescribirListaMotos();
                gestionVehiculo.llenarVehiculos();
                pintarMotos();

            } catch (IOException ex) {
                System.out.println("ERROR: Ocurrio un problema al modificar el archivo!" + ex.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(this, "No se seleciono nigun elemento");
        }


    }//GEN-LAST:event_btnModificarMotosActionPerformed

    private void mnuInformeVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuInformeVehiculosActionPerformed
        // INFORME VEHICULOS 

        gestionVehiculo.llenarVehiculos();
        pintarVehiculosDisponibles();
        pintarVehiculosNoDisponibles();
        pintarTodosLosVehiculos();
        jifInformeVehiculos.show();
        jifInformeVehiculos.repaint();

        //Maximizar 
        if (jifInformeVehiculos.isIcon()) {

            try {
                jifInformeVehiculos.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_mnuInformeVehiculosActionPerformed

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        // FILTRO POR PLACA
        DefaultTableModel modeloDisponibles = (DefaultTableModel) tblTodosLosVehiculos.getModel();

        txtFiltro.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + txtFiltro.getText(), 0));

            }

        });

        trs = new TableRowSorter(modeloDisponibles);
        tblTodosLosVehiculos.setRowSorter(trs);


    }//GEN-LAST:event_txtFiltroKeyTyped

    TipoUsuario[] tipoUsuarios = new TipoUsuario[2];

    private void llenarTiposUsuario() {

        tipoUsuarios[0] = new TipoUsuario("1", "Administrador");
        tipoUsuarios[1] = new TipoUsuario("2", "Usuario");
    }


    private void btnCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearUsuarioActionPerformed
        // CREAR USUARIO

        if (cboTipoUsuario.getSelectedItem().equals("Administrador")) {

            int tipoUsuario = 0;

        } else if (cboTipoUsuario.getSelectedItem().equals("Consulta")) {

            tipoUsuario = 1;
        }

        if (txtCedula.getText() == null || txtCedula.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el campo de cedula ", "Datos Faltantes", 2);

        } else if (txtNombre.getText() == null || txtNombre.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el campo de nombre ", "Datos Faltantes", 2);

        } else if (txtCorreo.getText() == null || txtCorreo.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el campo de correo ", "Datos Faltantes", 2);

        } else if (txtClaveCrearUsuario.getText() == null || txtClaveCrearUsuario.getText().compareTo("") == 0) {

            JOptionPane.showMessageDialog(this, "Debe diligenciar el campo de clave ", "Datos Faltantes", 2);

        } else if (txtClaveCrearUsuario.getText().equals(txtConfirmarClave.getText())) {

            Pattern pattern = Pattern.compile("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$");
            Matcher matcher = pattern.matcher(txtCorreo.getText());

            if (matcher.find() == true) {

                llenarTiposUsuario();

                Usuario usuarioNuevo = new Usuario(txtCedula.getText(), txtNombre.getText(), txtCorreo.getText(), txtClaveCrearUsuario.getText(), tipoUsuarios[tipoUsuario]);

                gestionUsuario.adicionarUsuario(usuarioNuevo);
                llenarTiposUsuario();
                pintarUsuario();

                txtCedula.setText("");
                txtNombre.setText("");
                txtCorreo.setText("");
                txtClaveCrearUsuario.setText("");
                txtConfirmarClave.setText("");

            } else {

                JOptionPane.showMessageDialog(this, "El correo no tiene el formato adecuado", "ERROR", 2);
            }

        } else {

            JOptionPane.showMessageDialog(this, "Las claves no coinciden ", "Inconsistencia", 2);
        }
    }//GEN-LAST:event_btnCrearUsuarioActionPerformed

    private void btnEliminarFurgonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFurgonActionPerformed
        // ELIMINAR FURGON

        DefaultTableModel modelFurgon = (DefaultTableModel) tblFurgonetas.getModel();
        int filaFurgon = tblFurgonetas.getSelectedRow();
        if (filaFurgon >= 0) {

            modelFurgon.removeRow(filaFurgon);

            JOptionPane.showMessageDialog(null, "Registro eliminado");

        } else {
            JOptionPane.showMessageDialog(null, "No se selecciono ningun elemento");

        }
        try {
            SobreescribirListaFurgonestas();
            gestionVehiculo.llenarVehiculos();
            pintarFurgonetas();

        } catch (IOException ex) {

            System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + ex.getMessage());
        }


    }//GEN-LAST:event_btnEliminarFurgonActionPerformed

    private void btnModificarFuronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarFuronActionPerformed
        //MODIFICAR FURGONETA

        DefaultTableModel modelFurgon = (DefaultTableModel) tblFurgonetas.getModel();
        int filaSeleccionada = tblFurgonetas.getSelectedRow();

        if (filaSeleccionada >= 0) {

            txtMatriculaFurgon.setText(tblFurgonetas.getValueAt(filaSeleccionada, 1).toString());
            txtValorAlquilerFurgoneta.setText(tblFurgonetas.getValueAt(filaSeleccionada, 4).toString());
            txtKmFurgoneta.setText(tblFurgonetas.getValueAt(filaSeleccionada, 2).toString());
            txtCapacidad.setText(tblFurgonetas.getValueAt(filaSeleccionada, 0).toString());

            modelFurgon.removeRow(filaSeleccionada);
            try {
                SobreescribirListaFurgonestas();
                gestionVehiculo.llenarVehiculos();
                pintarFurgonetas();
            } catch (IOException ex) {

                System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + ex.getMessage());
            }
        } else {

            JOptionPane.showMessageDialog(null, "No se selecciono ningun elemento");
        }

    }//GEN-LAST:event_btnModificarFuronActionPerformed

    public void SobreescribirListaUsuario() throws IOException {

        DefaultTableModel modeloUsuario = (DefaultTableModel) tblUsuarios.getModel();
        try {
            String sucursalesCSVFile = "src/usuarios.csv";
            BufferedWriter fichero = new BufferedWriter(new FileWriter(sucursalesCSVFile));

            for (int i = 0; i < tblUsuarios.getRowCount(); i++) {//realiza un barrido por filas.
                for (int j = 0; j < tblUsuarios.getColumnCount(); j++) //realiza un barrido por columnas.
                {
                    fichero.write(tblUsuarios.getValueAt(i, j).toString());
                    if (j < tblUsuarios.getColumnCount() - 1) { //agrega separador "," si no es el ultimo elemento de la fila.
                        fichero.write(",");
                    }

                }
                fichero.newLine(); //inserta nueva linea.
            }
            fichero.close();//Cierra el archivo

        } catch (IOException e) {
            System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + e.getMessage());
        }
    }


    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        // ELIMINAR USUARIO

        DefaultTableModel modelousuario = (DefaultTableModel) tblUsuarios.getModel();

        int filaSeleccionada = tblUsuarios.getSelectedRow();
        if (filaSeleccionada >= 0) {

            modelousuario.removeRow(filaSeleccionada);
            try {
                SobreescribirListaUsuario();
                llenarTiposUsuario();
                pintarCoches();
            } catch (IOException ex) {
                Logger.getLogger(MdiVehiculos.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null, "Registro eliminado");

        } else {

            JOptionPane.showMessageDialog(null, "No se selecciono ningun elemento");
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnModificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUsuarioActionPerformed
        // MODIFICAR USUARIO

        DefaultTableModel modelUsuario = (DefaultTableModel) tblUsuarios.getModel();
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada >= 0) {

            txtNombre.setText(tblUsuarios.getValueAt(filaSeleccionada, 1).toString());
            txtCedula.setText(tblUsuarios.getValueAt(filaSeleccionada, 0).toString());
            txtCorreo.setText(tblUsuarios.getValueAt(filaSeleccionada, 2).toString());

            modelUsuario.removeRow(filaSeleccionada);

            try {
                SobreescribirListaUsuario();
                gestionUsuario.llenarUsuarios();
                pintarUsuario();
            } catch (IOException ex) {

                System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + ex.getMessage());
            }
        } else {

            JOptionPane.showMessageDialog(null, "No se selecciono ningun elemento");
        }

    }//GEN-LAST:event_btnModificarUsuarioActionPerformed

    public void SobreescribirListaFurgonestas() throws IOException {

        DefaultTableModel modeloFurgon = (DefaultTableModel) tblFurgonetas.getModel();
        try {
            String sucursalesCSVFile = "src/furgonetas.txt";
            BufferedWriter fichero = new BufferedWriter(new FileWriter(sucursalesCSVFile));

            for (int i = 0; i < tblFurgonetas.getRowCount(); i++) {//realiza un barrido por filas.
                for (int j = 0; j < tblFurgonetas.getColumnCount(); j++) //realiza un barrido por columnas.
                {
                    fichero.write(tblFurgonetas.getValueAt(i, j).toString());
                    if (j < tblFurgonetas.getColumnCount() - 1) { //agrega separador "," si no es el ultimo elemento de la fila.
                        fichero.write(",");
                    }

                }
                fichero.newLine(); //inserta nueva linea.
            }
            fichero.close();//Cierra el archivo

        } catch (IOException e) {
            System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + e.getMessage());
        }
    }

    public void SobreescribirListaCoches() throws IOException {

        DefaultTableModel modeloCoche = (DefaultTableModel) tblCoches.getModel();
        try {
            String sucursalesCSVFile = "src/coches.txt";
            BufferedWriter fichero = new BufferedWriter(new FileWriter(sucursalesCSVFile));

            for (int i = 0; i < tblCoches.getRowCount(); i++) {//realiza un barrido por filas.
                for (int j = 0; j < tblCoches.getColumnCount(); j++) //realiza un barrido por columnas.
                {
                    fichero.write(tblCoches.getValueAt(i, j).toString());
                    if (j < tblCoches.getColumnCount() - 1) { //agrega separador "," si no es el ultimo elemento de la fila.
                        fichero.write(",");
                    }

                }
                fichero.newLine(); //inserta nueva linea.
            }
            fichero.close();//Cierra el archivo

        } catch (IOException e) {
            System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + e.getMessage());
        }
    }

    public void SobreescribirListaMotos() throws IOException {

        DefaultTableModel modeloMoto = (DefaultTableModel) tblMotos.getModel();
        try {
            String sucursalesCSVFile = "src/motos.txt";
            BufferedWriter fichero = new BufferedWriter(new FileWriter(sucursalesCSVFile));

            for (int i = 0; i < tblMotos.getRowCount(); i++) {//realiza un barrido por filas.
                for (int j = 0; j < tblMotos.getColumnCount(); j++) //realiza un barrido por columnas.
                {
                    fichero.write(tblMotos.getValueAt(i, j).toString());
                    if (j < tblMotos.getColumnCount() - 1) { //agrega separador "," si no es el ultimo elemento de la fila.
                        fichero.write(",");
                    }

                }
                fichero.newLine(); //inserta nueva linea.
            }
            fichero.close();//Cierra el archivo

        } catch (IOException e) {
            System.out.println("ERROR: Ocurrio un problema al salvar el archivo!" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MdiVehiculos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MdiVehiculos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MdiVehiculos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MdiVehiculos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MdiVehiculos().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarFurgonta;
    private static javax.swing.ButtonGroup btnCasco;
    private javax.swing.JToggleButton btnCrearUsuario;
    private javax.swing.JRadioButton btnDisponible;
    private javax.swing.JButton btnElimicarCoche;
    private javax.swing.JToggleButton btnEliminarFurgon;
    private javax.swing.JButton btnEliminarMoto;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.ButtonGroup btnEstado;
    private javax.swing.ButtonGroup btnEstadoFurgoneta;
    private javax.swing.ButtonGroup btnEstadoMoto;
    private static javax.swing.ButtonGroup btnExtras;
    private javax.swing.JRadioButton btnFurgonDisponible;
    private javax.swing.JRadioButton btnFurgonNoDisponible;
    private javax.swing.JButton btnGuardarCoche;
    private javax.swing.JButton btnGuardarMoto;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnModificarCoche;
    private javax.swing.JToggleButton btnModificarFuron;
    private javax.swing.JButton btnModificarMotos;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JRadioButton btnMotoDisponible;
    private javax.swing.JRadioButton btnMotoNoDisponible;
    private javax.swing.JRadioButton btnNo;
    private javax.swing.JRadioButton btnNoCasco;
    private javax.swing.JRadioButton btnNoDisponible;
    private javax.swing.JRadioButton btnSi;
    private javax.swing.JRadioButton btnSiCasco;
    private javax.swing.JComboBox<String> cboTipoUsuario;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JInternalFrame jifCoches;
    private javax.swing.JInternalFrame jifCrearUsuario;
    private javax.swing.JInternalFrame jifFurgonetas;
    private javax.swing.JInternalFrame jifInformeVehiculos;
    private javax.swing.JInternalFrame jifLogin;
    private javax.swing.JInternalFrame jifMotos;
    private javax.swing.JLabel lblEstadoCarro;
    private javax.swing.JLabel lblEstadoCarro1;
    private javax.swing.JLabel lblExtrasCarro;
    private javax.swing.JLabel lblExtrasCarro1;
    private javax.swing.JLabel lblKmCarro;
    private javax.swing.JLabel lblKmCarro1;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblMatricula1;
    private javax.swing.JLabel lblValorAlquiler;
    private javax.swing.JLabel lblValorAlquiler1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuCerrarSesion;
    private javax.swing.JMenuItem mnuCrearUsuario;
    private javax.swing.JMenuItem mnuInformeVehiculos;
    private javax.swing.JMenuItem mnuListarCoches;
    private javax.swing.JMenuItem mnuListarMotos;
    private javax.swing.JMenu mnuListarVehiculos;
    private javax.swing.JMenuItem mnuListarfurgonetas;
    private javax.swing.JMenu mnuMenuAlquiler;
    private javax.swing.JMenu mnuVehiculos;
    private javax.swing.JTabbedPane pnlPestañas;
    private javax.swing.JTable tblCoches;
    private javax.swing.JTable tblFurgonetas;
    private javax.swing.JTable tblMotos;
    private javax.swing.JTable tblTodosLosVehiculos;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTable tblVehiculosDisponibles;
    private javax.swing.JTable tblVehiculosNoDisponibles;
    private javax.swing.JTextField txtCapacidad;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JPasswordField txtClaveCrearUsuario;
    private javax.swing.JPasswordField txtConfirmarClave;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtKmCarro;
    private javax.swing.JTextField txtKmFurgoneta;
    private javax.swing.JTextField txtKmMoto;
    private javax.swing.JTextField txtMatriculaCarro;
    private javax.swing.JTextField txtMatriculaFurgon;
    private javax.swing.JTextField txtMatriculaMoto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtValorAlquilerCarro;
    private javax.swing.JTextField txtValorAlquilerFurgoneta;
    private javax.swing.JTextField txtValorAlquilerMoto;
    // End of variables declaration//GEN-END:variables

}
